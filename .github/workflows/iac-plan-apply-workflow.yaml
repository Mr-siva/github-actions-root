name: Terraform Deployment

on:
  workflow_call:
    inputs:
      repository_name:
        description: Repository Name
        required: false
        type: string
      
      environment:
        description: Environment Name
        required: false
        type: string

      product_name:
        description: Product Name
        required: false
        type: string

      region:
        description: Region Name
        required: false
        type: string



env:
    GITHUB_WORKSPACE: ${{ github.workspace }}
    IAC_JOB_PATH: /var/iac/jobs/${{ github.repository }}/${{ github.run_id }}/

jobs:
  terraform_plan:
    runs-on: ubuntu-latest
    name: ${{ github.event_name == 'pull_request' && 'Check PR - Change Request Ticket' || 'Plan Terraform' }}
    #runs-on: $#{{ inputs.runner || (inputs.environment == 'prd' || inputs.environment == 'dr') && 'iac-prod' || 'iac-nonprod' }}
    env:
        GITHUB_PAT_TOKEN: ${{ secrects.TOKEN_GITHUB }}
        GITHUB_PAT_USER: 
    steps:
      # Checkout child repo code
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region ap-south-1


      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      # Terraform Init
      - name: Terraform Init
        run: terraform init

      # Terraform Validate
      - name: Terraform Validate
        run: terraform validate

      # Terraform Plan
      - name: Terraform Plan
        run: terraform plan 

      # Terraform Apply (auto approve)
      - name: Terraform apply
        run: terraform apply -auto-approve